public abstract class Commerce extends Batiment {

    private String nom;
	private int attractivite;
    private int nbEmployes;
    private int valorisationEmplois;



	public Commerce(String nom, Case coin, int rotation, Carte carte, Parcelle[] parcelles,
				int[] accecsRoutes, int attractivite, int nbEmployes, int valorisationEmplois) {
		super(coin, rotation, carte, parcelles, accecsRoutes);
		this.nom = nom;
		this.attractivite = attractivite;
		this.nbEmployes = nbEmployes;
        this.valorisationEmplois = valorisationEmplois;
	}

	public Commerce(String nom, Carte carte, int niveau) {
		switch (niveau) {
			case 1 : 
				this(nom, carte.getCase(0,0), 1, carte, [], [],
			 3, 100, 3);
			case 2 :
				this(nom, carte.getCase(0,0), 1, carte, [], [],
			 6, 1000, 4);
			case 3 : 
				this(nom, carte.getCase(0,0), 1, carte, [], [],
			 9, 5000, 6);
			default :
			 	this(nom, carte.getCase(0,0), 1, carte, [], [],
			 0, 0, 0);
		}
		
	}
	
	/* Il faudra définir un certain nombre d'employé, attractivité et valorisation de
	l'emploi en fonction du commerce soit en créant des sous-classes de commerce,
	soit en créant directement ces commerces à l'aide du 1er constructeur*/
	
	public int getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}
    
    public int getAttractivite() {
		return this.attractivite;
	}

	public void setAttractivite(int attractivite) {
		this.attractivite = attractivite;
	}

    public int getValorisationEmplois() {
		return this.valorisationEmplois;
	}

	public void setValorisationEmplois(int valorisationEmplois) {
		this.valorisationEmplois = valorisationEmplois;
	}

	public int getNbEmployes() {
		return this.nbEmployes;
	}

	public void setNbEmployes(int nbEmployes) {
		this.nbEmployes = nbEmployes;
	}


}