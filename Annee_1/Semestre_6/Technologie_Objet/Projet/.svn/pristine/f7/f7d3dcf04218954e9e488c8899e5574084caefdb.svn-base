package src.affichagePartie;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;


public class BandeAction extends JPanel implements MouseListener {
    private JFrame fenetre;
    //On a 8 type de batiments et un bouton detruire
    private final static int nbBoutons = 9;
    private JLabel[] typeBatiments  = new JLabel[nbBoutons];
    private static Icon[] iconBatiment = new Icon[nbBoutons];
    private int selected = -1;
    
    static {
        iconBatiment[0] = new ImageIcon("src/Images/img_Habitation.png", "Habitation");
        iconBatiment[1] = new ImageIcon("src/Images/img_Commerce.png", "Commerce");
        iconBatiment[2] = new ImageIcon("src/Images/img_Industrie.png", "Industrie");
        iconBatiment[3] = new ImageIcon("src/Images/img_Usine.png", "Usine");
        iconBatiment[4] = new ImageIcon("src/Images/img_Pompier.png", "Pompier");
        iconBatiment[5] = new ImageIcon("src/Images/img_PoleEmploi.png", "Pôle-Emploi");
        iconBatiment[6] = new ImageIcon("src/Images/img_Mairie.png", "Mairie");
        iconBatiment[7] = new ImageIcon("src/Images/img_Hopital.png", "Hôpital");
        iconBatiment[8] = new ImageIcon("src/Images/herbe.png", "Detruire");
        
    }
    public BandeAction(JFrame fenetre) {
        super();
        this.fenetre = fenetre;
        this.setLayout(new GridLayout(1, nbBoutons));

        for (int i = 0; i < 9; i ++) {
            typeBatiments[i] = new JLabel(iconBatiment[i].toString());
            typeBatiments[i].setIcon(iconBatiment[i]);
            typeBatiments[i].addMouseListener(this);
            typeBatiments[i].setHorizontalAlignment(SwingConstants.CENTER);
            typeBatiments[i].setVerticalAlignment(SwingConstants.TOP);
            typeBatiments[i].setVerticalTextPosition(SwingConstants.BOTTOM);
            this.add(this.typeBatiments[i]);
        }

        this.fenetre.getContentPane().add(this);

		this.setVisible(true);
    }

    public void updatePosition() {
        if(this.getHeight() != 0 && this.getWidth() != 0) {
            updateImage();
        } else if (this.getHeight() == 0) {
            System.out.println("Hauteur de Bande action nulle");
        } else {
            System.out.println("Largeur de Bande Action nulle");
        }
        
    }

    public void updateImage() {        
        for(int i = 0; i < nbBoutons; i++) {
            this.typeBatiments[i].setIcon(this.resizeSquareIcon((ImageIcon) iconBatiment[i], this.typeBatiments[i]));
        }
    }

    private ImageIcon resizeSquareIcon(ImageIcon icon, JLabel label) {
        int taille = Math.min(label.getWidth(), label.getHeight()); 
        return new ImageIcon(icon.getImage().getScaledInstance(taille, taille, Image.SCALE_DEFAULT));
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        int deselection = this.selected;
        if (e.getSource() == this.typeBatiments[0]) {
            this.typeBatiments[0].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[0].setOpaque(true);
            this.selected = 0;
        } else if (e.getSource() == this.typeBatiments[1]) {
            this.typeBatiments[1].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[1].setOpaque(true);
            this.selected = 1;
        } else if (e.getSource() == this.typeBatiments[2]) {
            this.typeBatiments[2].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[2].setOpaque(true);
            this.selected = 2;
        } else if (e.getSource() == this.typeBatiments[3]) {
            this.typeBatiments[3].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[3].setOpaque(true);
            this.selected = 3;
        } else if (e.getSource() == this.typeBatiments[4]) {
            this.typeBatiments[4].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[4].setOpaque(true);
            this.selected = 4;
        } else if (e.getSource() == this.typeBatiments[5]) {
            this.typeBatiments[5].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[5].setOpaque(true);
            this.selected = 5;
        } else if (e.getSource() == this.typeBatiments[6]) {
            this.typeBatiments[6].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[6].setOpaque(true);
            this.selected = 6;
        } else if (e.getSource() == this.typeBatiments[7]) {
            this.typeBatiments[7].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[7].setOpaque(true);
            this.selected = 7;
        } else if (e.getSource() == this.typeBatiments[8]) {
            this.typeBatiments[8].setBackground(Color.LIGHT_GRAY);
            this.typeBatiments[8].setOpaque(true);
            this.selected = 8;
        } 

        if(this.selected != deselection && deselection != -1) {
            this.typeBatiments[deselection].setBackground(Color.WHITE);
            this.typeBatiments[deselection].setOpaque(false);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {}

    @Override
    public void mouseExited(MouseEvent e) {}


}
