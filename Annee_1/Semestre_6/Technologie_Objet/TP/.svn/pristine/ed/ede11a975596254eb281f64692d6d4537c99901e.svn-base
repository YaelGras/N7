package allumettes;

public class Arbitre {
	private Joueur joueur1;
	private Joueur joueur2;
	private Boolean confiant;
	
	
	Arbitre(Joueur j1, Joueur j2, boolean confident){
		this.joueur1 = j1;
		this.joueur2 = j2;
		this.confiant = confident;
	}
	
	Arbitre(Joueur j1, Joueur j2){
		this(j1, j2, false);
	}
	
	void arbitrer(Jeu jeu){
		
		boolean finPartie = false;
		while (!finPartie) {
			finPartie = tourJoueur(joueur1, jeu);
			finPartie = tourJoueur(joueur2, jeu);			
		}
		
	}
	
	private boolean tourJoueur(Joueur joueur, Jeu jeu) {
		boolean finPartie = false;
		if (jeu.getNombreAllumettes() > 0) {
			System.out.println("Allumettes restantes : " + jeu.getNombreAllumettes());
			try {
				jeu.retirer(joueur.getPrise(jeu));
			} catch (CoupInvalideException e) {
				System.out.println("Impossible ! Nombre invalide : " + e.getCoup() + " " + e.getMessage());
			}
		} else {
			finPartie = true;
		}
		return finPartie;
	}
}
